import os
from dotenv import load_dotenv
from telegram import Update, ReplyKeyboardMarkup, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes, CallbackQueryHandler, CallbackContext
#—Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –ø—Ä–∏ –≤–≤–æ–¥–µ —Å—Å—ã–ª–∫–∏ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    keyboard = [
        [InlineKeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è 	üìù ", callback_data='info')],
        [InlineKeyboardButton("–ü–æ–º–æ—â—å", callback_data='help')],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç, —è  –±–æ—Ç --–¢800-- <..üòÄ..>!  ", reply_markup=reply_markup)

async def button(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.answer()  # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ –∑–∞–ø—Ä–æ—Å –∫–Ω–æ–ø–∫–∏

    if query.data == 'info':
        await query.edit_message_text(text="hello")
    elif query.data == 'help':
        await query.edit_message_text(text="help")

async def profile(update: Update, context: CallbackContext) -> None:
    user = update.message.from_user
    update.message.reply_text(f'–ü—Ä–∏–≤–µ—Ç, {user.first_name}! –¢–≤–æ–π ID: {user.id}')

#—Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_message = update.message.text.lower() #–ø—Ä–∏–≤–æ–¥–∏–º –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É

    #–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
    if "–ø—Ä–∏–≤–µ—Ç" in user_message:
        await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞, –∫–∞–∫—É—é –æ—Ü–µ–Ω–∫—É –ø–æ–ª—É—á–∏–ª? ")
    elif "–ø–æ–∫–∞" in user_message:
        await update.message.reply_text("–î–æ –≤—Å—Ç—Ä–µ—á–∏ –±—É–¥—É –∂–¥–∞—Ç—å —Ç–µ–±—è")
    elif "–∫–∞–∫ –¥–µ–ª–∞" in user_message:
        await update.message.reply_text("–Ø –≤ –ø–æ—Ä—è–¥–∫–µ, —Å–ø–∞—Å–∏–±–æ! –ê —Ç—ã?")
    elif "–∫–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç" in user_message:
        await update.message.reply_text("–ú–µ–Ω—è –∑–æ–≤—É—Ç --–¢800-- ü§ñ ")
    else:
        await update.message.reply_text(f"–¢—ã —Å–∫–∞–∑–∞–ª {update.message.text}")

#–æ—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
def main():
    load_dotenv()

    TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

    #—Å–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(TOKEN).build()

    #–¥–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("profile", profile))
    application.add_handler(CallbackQueryHandler(button))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))


    #–∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    application.run_polling()


if __name__ == '__main__':
    main()




